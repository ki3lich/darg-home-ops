---
version: v1alpha1
persist: true # darg-ops-change
machine:
  ca:
    crt: op://darg-home-ops/talos/MACHINE_CA_CRT
    {% if ENV.IS_CONTROLLER %}
    key: op://darg-home-ops/talos/MACHINE_CA_KEY
    {% endif %}
  features:
    apidCheckExtKeyUsage: true
    diskQuotaSupport: true
    hostDNS:
      enabled: true
      forwardKubeDNSToHost: false
      resolveMemberNames: true
    kubePrism:
      enabled: true
      port: 7445
    {% if ENV.IS_CONTROLLER %}
    kubernetesTalosAPIAccess:
      allowedKubernetesNamespaces:
        - actions-runner-system
        - system-upgrade
      allowedRoles:
        - os:admin
      enabled: true
    {% endif %}
    rbac: true
    stableHostname: true
  files:
    - op: create
      path: /etc/cri/conf.d/20-customization.part
      content: |
        [plugins."io.containerd.cri.v1.images"]
          discard_unpacked_layers = false
        [plugins."io.containerd.cri.v1.runtime"]
          cdi_spec_dirs = ["/var/cdi/static", "/var/cdi/dynamic"]
          device_ownership_from_security_context = true
    #- op: overwrite   # darg-ops-change
    #  path: /etc/nfsmount.conf  # darg-ops-change
    #  permissions: 0o644  # darg-ops-change
    #  content: |  # darg-ops-change
    #    [ NFSMount_Global_Options ]  # darg-ops-change
    #    nfsvers=4.2  # darg-ops-change
    #    hard=True  # darg-ops-change
    #    nconnect=16  # darg-ops-change
    #    noatime=True  # darg-ops-change
  install:
    diskSelector:
      model: SanDisk SD8SN8U-  # darg-ops-change
    image: factory.talos.dev/metal-installer/05b4a47a70bc97786ed83d200567dcc8a13f731b164537ba59d5397d668851fa:v1.11.3
    wipe: false
  #kernel:  # darg-ops-change
  #  modules:  # darg-ops-change
  #    - name: nbd  # darg-ops-change
  #    - name: thunderbolt  # darg-ops-change
  #    - name: thunderbolt_net  # darg-ops-change
  kubelet:
    defaultRuntimeSeccompProfileEnabled: true
    disableManifestsDirectory: true
    extraConfig:
      featureGates:
        ImageVolume: true
        ResourceHealthStatus: true
      serializeImagePulls: false
    image: ghcr.io/siderolabs/kubelet:v1.34.1
    nodeIP:
      validSubnets:
        - 192.168.1.0/24
  network:
    interfaces:  # darg-ops-change
      - deviceSelector:  # darg-ops-change
          hardwareAddr: b0:7b:25:40:41:c6  # darg-ops-change
          driver: r8169  # darg-ops-change
        mtu: 9000  # darg-ops-change
        dhcp: true  # darg-ops-change
        vip:  # darg-ops-change
          ip: 192.168.1.120  # darg-ops-change
  nodeLabels:
    # node.kubernetes.io/gpu: "true" # darg-ops-change
    topology.kubernetes.io/region: main
  sysctls:
    fs.inotify.max_user_instances: "8192"
    fs.inotify.max_user_watches: "1048576"
    net.core.default_qdisc: fq
    net.core.rmem_max: "67108864"
    net.core.wmem_max: "67108864"
    net.ipv4.neigh.default.gc_thresh1: "4096"
    net.ipv4.neigh.default.gc_thresh2: "8192"
    net.ipv4.neigh.default.gc_thresh3: "16384"
    net.ipv4.tcp_congestion_control: bbr
    net.ipv4.tcp_fastopen: "3"
    net.ipv4.tcp_mtu_probing: "1"
    net.ipv4.tcp_rmem: 4096 87380 33554432
    net.ipv4.tcp_window_scaling: "1"
    net.ipv4.tcp_wmem: 4096 65536 33554432
    sunrpc.tcp_max_slot_table_entries: "128"
    sunrpc.tcp_slot_table_entries: "128"
    user.max_user_namespaces: "11255"
    vm.nr_hugepages: "1024"
  token: op://darg-home-ops/talos/MACHINE_TOKEN
cluster:
  ca:
    crt: op://darg-home-ops/talos/CLUSTER_CA_CRT
    {% if ENV.IS_CONTROLLER %}
    key: op://darg-home-ops/talos/CLUSTER_CA_KEY
    {% endif %}
  clusterName: main
  controlPlane:
    endpoint: https://192.168.1.203:6443  # darg-ops-change
  discovery:
    enabled: true
    registries:
      kubernetes:
        disabled: true
      service:
        disabled: false
  id: op://darg-home-ops/talos/CLUSTER_ID
  network:
    cni:
      name: none
    dnsDomain: cluster.local
    podSubnets:
      - 10.42.0.0/16
    serviceSubnets:
      - 10.43.0.0/16
  secret: op://darg-home-ops/talos/CLUSTER_SECRET
  token: op://darg-home-ops/talos/CLUSTER_TOKEN
  {% if ENV.IS_CONTROLLER %}
  aggregatorCA:
    crt: op://darg-home-ops/talos/CLUSTER_AGGREGATORCA_CRT
    key: op://darg-home-ops/talos/CLUSTER_AGGREGATORCA_KEY
  allowSchedulingOnControlPlanes: true
  apiServer:
    auditPolicy:
      apiVersion: audit.k8s.io/v1
      kind: Policy
      rules:
        - level: Metadata
    certSANs:
      - k8s.internal
      - 192.168.1.203 # darg-ops-change
    disablePodSecurityPolicy: true
    extraArgs:
      enable-aggregator-routing: "true"
      feature-gates: ImageVolume=true,MutatingAdmissionPolicy=true,ResourceHealthStatus=true
      runtime-config: admissionregistration.k8s.io/v1beta1=true
    image: registry.k8s.io/kube-apiserver:v1.34.1
  controllerManager:
    extraArgs:
      bind-address: 0.0.0.0
    image: registry.k8s.io/kube-controller-manager:v1.34.1
  coreDNS:
    disabled: true
  etcd:
    advertisedSubnets:
      - 192.168.1.0/24
    ca:
      crt: op://darg-home-ops/talos/CLUSTER_ETCD_CA_CRT
      key: op://darg-home-ops/talos/CLUSTER_ETCD_CA_KEY
    extraArgs:
      listen-metrics-urls: http://0.0.0.0:2381
  proxy:
    disabled: true
    image: registry.k8s.io/kube-proxy:v1.34.1
  scheduler:
    #config:  # darg-ops-change
    #  apiVersion: kubescheduler.config.k8s.io/v1  # darg-ops-change
    #  kind: KubeSchedulerConfiguration  # darg-ops-change
    #  profiles:  # darg-ops-change
    #    - schedulerName: default-scheduler  # darg-ops-change
    #      plugins:  # darg-ops-change
    #        score:  # darg-ops-change
    #          disabled:  # darg-ops-change
    #            - name: ImageLocality  # darg-ops-change
    #      pluginConfig:  # darg-ops-change
    #        - name: PodTopologySpread  # darg-ops-change
    #          args:  # darg-ops-change
    #            defaultingType: List  # darg-ops-change
    #            defaultConstraints:  # darg-ops-change
    #              - maxSkew: 1  # darg-ops-change
    #                topologyKey: kubernetes.io/hostname  # darg-ops-change
    #                whenUnsatisfiable: ScheduleAnyway  # darg-ops-change
    extraArgs:
      bind-address: 0.0.0.0
    image: registry.k8s.io/kube-scheduler:v1.34.1
  secretboxEncryptionSecret: op://darg-home-ops/talos/CLUSTER_SECRETBOXENCRYPTIONSECRET
  serviceAccount:
    key: op://darg-home-ops/talos/CLUSTER_SERVICEACCOUNT_KEY
  {% endif %}
#---  # darg-ops-change
#apiVersion: v1alpha1  # darg-ops-change
#kind: UserVolumeConfig  # darg-ops-change
#name: local-hostpath  # darg-ops-change
#provisioning:  # darg-ops-change
#  diskSelector:  # darg-ops-change
#    match: disk.model == "Corsair MP600 MICRO" && !system_disk  # darg-ops-change
#  minSize: 1TB  # darg-ops-change
#---  # darg-ops-change
#apiVersion: v1alpha1  # darg-ops-change
#kind: WatchdogTimerConfig  # darg-ops-change
#device: /dev/watchdog0  # darg-ops-change
#timeout: 5m  # darg-ops-change
